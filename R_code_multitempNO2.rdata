# SB settiamo la wd per prima cosa
setwd("C:/lab_eco/")
# SB la libreria che utilizziamo è raster quindi la richiamo
library(raster) #in realtà non avendo chiuso R non serviva farlo 
# SB ora importiamo tramite la funzione ratser la prima immagine presa da iol che si trova in lab_eco
EN01 <- raster("EN_0001.png") # SB le do anche un nome più comodo
plot(EN01) # SB così la visualizzo la situazione dell'azoto a gennaio
# SB procediampo ad importare tutte le immagini 
EN02 <- raster("EN_0002.png")
EN03 <- raster("EN_0003.png")
EN04 <- raster("EN_0004.png")
EN05 <- raster("EN_0005.png")
EN06 <- raster("EN_0006.png")
EN07 <- raster("EN_0007.png")
EN08 <- raster("EN_0008.png")
EN09 <- raster("EN_0009.png")
EN10 <- raster("EN_0010.png")
EN11 <- raster("EN_0011.png")
EN12 <- raster("EN_0012.png")
EN13 <- raster("EN_0013.png")
# SB potevo fare un ciclo for per fare prima 
# list_rast=list()
# for(i in 1:length(rlist)){
#  r=raster(rlist[[i]])
#  list_rast[[i]]=r
# }
# SB oppure un altro metodo studiato ah hoc per R
library(raser)
setwd("~/lab/esa_no2") # SB si crea una sottocartella con tutte le immagini .png
rlist=list.files(pattern=".png", full.names=T) # SB in pratica racchiude i file che ci interessano in una lista
list_rast=lapply(rlist, raster) # SB la funzione lapply le importa
# SB se scrivo rlist su R mi mostra la lista con le 13 immagini.
# SB plot della immagine uno e della 13 per vedere confronto
cl <- colorRampPalette(c('red','orange','yellow'))(100) #cambiamo i colori 
plot(EN01, col=cl)
plot(EN013, col=cl)
par(mfrow=c(1,2)) # SB si vede meglio se le metto affiancate
plot(EN01, col=cl)
plot(EN13, col=cl)
# SB ora facciamo una differenza tra le due immagini 
difno2 <- EN13 - EN01
cldif <- colorRampPalette(c('blue','black','yellow'))(100) #
plot(difno2, col=cldif)
# SB facciamo delle statistiche di base
# SB plottiamo tutte le mappe, ho due strade per farlo  
# SB la più lentapar(mfrow=c(4,4))
par(mfrow=c(4,4))
plot(EN01, col=cl)
plot(EN02, col=cl)
plot(EN03, col=cl)
plot(EN04, col=cl)
plot(EN05, col=cl)
plot(EN06, col=cl)
plot(EN07, col=cl)
plot(EN08, col=cl)
plot(EN09, col=cl)
plot(EN10, col=cl)
plot(EN11, col=cl)
plot(EN12, col=cl)
plot(EN13, col=cl)
# SB il metodo più veloce è creare uno stack 
EN <- stack(EN01,EN02,EN03,EN04,EN05,EN06,EN07,EN08,EN09,EN10,EN11,EN12,EN13) # SB la funzione stack imballa le 13 immagini in una sola 
cl <- colorRampPalette(c('red','orange','yellow'))(100) # 
plot(EN, col=cl) # SB plot della nuova immagine che comprende tutte le 13 precedenti e con una nuova nuance di colori.

##12/05 rifacciamo l'importazione dei dati usando lapply
library(raster) #richiamiamo la libreria raster
#abbiamo prima spostato tutti i file da importare in una sottocartella della nosta lab_eco
setwd("C:/lab_eco/esa_no2")
rlist <- list.files(pattern=".png") #creaiamo una lista di file che hanno in comune l'estensione .png
rlist #scrivendo il nome che le ho associato vedo i file che sono compresi 
# vedo questa lista infatti:  [1] "EN_0001.png" "EN_0002.png" "EN_0003.png" "EN_0004.png" "EN_0005.png"
 [6] "EN_0006.png" "EN_0007.png" "EN_0008.png" "EN_0009.png" "EN_0010.png"
[11] "EN_0011.png" "EN_0012.png" "EN_0013.png"
#adesso con la funzione raster posso importare le immagini
#lapply applica una funzione ad una lista, in pratica applico raster alla lista che ho appena crreato
listafinale <- lapply(rlist, raster)
listafinale #mi fa vedere le caratteristiche dei 13 file 
#vedo [[1]]
# class      : RasterLayer 
# band       : 1  (of  3  bands)
# dimensions : 432, 768, 331776  (nrow, ncol, ncell)
# resolution : 1, 1  (x, y)
# extent     : 0, 768, 0, 432  (xmin, xmax, ymin, ymax)
# crs        : NA 
# source     : C:/lab_eco/esa_no2/EN_0001.png 
# names      : EN_0001 
# values     : 0, 255  (min, max)
EN <- stack(listafinale) # SB questa Funzione raggruppa tutte le 13 immagini in una unica 
# SB facciamo la differenza tra la prima immagine e l'ultima 
difEN <- EN$EN_0013 - EN$EN_0001 # SB il dollaro lega 
cld <- colorRampPalette(c('blue','white','red'))(100) # 
plot(difEN, col=cld)
cl <- colorRampPalette(c('red','orange','yellow'))(100) #
plot(EN, col=cl)
boxplot(EN) # SB mi fa un grafico dove si vede in un certo senso la distribuzione 
boxplot(EN, horizontal=T) # SB lo metto orrizontale perchè non si capiva bene 
boxplot(EN, horizontal=T,outline=F) # SB si vede ancora meglio il calo dei valori massimi 
boxplot(EN, horizontal=T,outline=F,axes=T) # SB aggiungo anche gli assi
boxplot(EN, horizontal=T,outline=F,axes=F)   # SB vedo comè senza perchè in realtà =T è quello d default
















